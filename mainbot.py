import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart
from aiogram.types import Message, FSInputFile, URLInputFile, BufferedInputFile, CallbackQuery
import logging
import os
from aiogram.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, KeyboardButton, InlineKeyboardButton
from aiogram.filters.command import Command
from aiogram.fsm.state import StatesGroup, State 
from aiogram.fsm.context import FSMContext
import sqlite3

from cnf import TOKEN
import buttons_bot as bb

bot = Bot(token=TOKEN)
dp = Dispatcher()

class supports_tm(StatesGroup):
    supp_txt = State()
    number = State()

async def main():
    await dp.start_polling(bot)

@dp.message(CommandStart())
async def start_msg(message: Message):
    await message.answer('''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!‚úã
–≠—Ç–æ –±–æ—Ç –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –∑–∞–¥–∞—á–∞–º–∏ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏.
–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ãüíª: ''', reply_markup= bb.start_btn)

@dp.message(Command('support'))
async def supp(message: Message):
    await message.answer('''–í—ã –æ–±—Ä–∞—â–∞–µ—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É!
–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ø—Ä–µ—Ç–µ–Ω–∑–∏–∏ –∏ –º—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º! 
–í—Å–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –ø–æ—Ä—è–¥–∫–µ –æ—á–µ—Ä–µ–¥–∏, –±—É–¥—å—Ç–µ —Ç–µ—Ä–ø–µ–ª–∏–≤—ã –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏. 
–° –≤–∞–º–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂—É—Ç—Å—è!
–ß—Ç–æ–±—ã –º—ã —Å–º–æ–≥–ª–∏ –≤–∞–º –ø–æ–º–æ—á—å –ª—É—á—à–µ, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:

–§–ò–û
–¢–µ–∫—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è
                         
–ü—Ä–∏–º–µ—Ä:
–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á
–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –¥–æ–∫—É–º–µ–Ω—Ç '–Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞' ''', reply_markup= bb.support_btn)

@dp.callback_query(F.data == 'go')
async def supp_enter(callback: CallbackQuery, state: FSMContext):
    await state.set_state(supports_tm.supp_txt)
    await callback.message.reply(f'{callback.from_user.full_name}, –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ:')

@dp.message(supports_tm.supp_txt)
async def reg_supp(message: Message, state: FSMContext):
    await state.update_data(supp_txt=message.text)
    await state.set_state(supports_tm.number)
    await message.answer('''–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞''')

@dp.message(supports_tm.number)
async def reg_numb(message: Message, state: FSMContext):
    await state.update_data(number=message.text)
    db = sqlite3.connect('support_base.db')
    cur = db.cursor()
    txt = await state.get_data()
    print(txt)
    cur.execute('''INSERT INTO supports (tgname, number, text_supp) VALUES (?, ?, ?)''', [f'@{message.from_user.full_name}', txt['supp_txt'], txt['number']])
    cur.execute('''SELECT id from supports ORDER BY ROWID DESC LIMIT 1''')
    res = cur.fetchone()
    await message.reply(f'''–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ! –û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏. –û—á–µ—Ä–µ–¥—å: {' '.join(map(str, res))}''')
    db.commit()
    db.close()

@dp.callback_query(F.data == 'back')
async def menu_b(callback: CallbackQuery):
    await callback.message.answer('''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!‚úã
–≠—Ç–æ –±–æ—Ç –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –∑–∞–¥–∞—á–∞–º–∏ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏.
–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ãüíª: ''', reply_markup= bb.start_btn)

@dp.callback_query(F.data == 'ctg1')
async def category_1(callback: CallbackQuery):
    await callback.message.reply_document(document=FSInputFile('/Users/evgeniya/Desktop/PYTHON/botGPS/TestDocs/instr_calc.pdf'), caption= '''–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞üë®‚Äçüíª: ''', reply_markup=bb.backkk_btn)

# @dp.callback_query(F.data == 'set')
# async def d_one(callback: CallbackQuery):
#     await callback.message.reply_document(document=FSInputFile('TestDocs\webcalc.docx'), caption= '''–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤–µ–±-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞üë®‚Äçüíª: ''', reply_markup=bb.backkk_btn)

# @dp.callback_query(F.data == 'loc')
# async def d_one(callback: CallbackQuery):
#     await callback.message.reply_document(document=FSInputFile('TestDocs\loccalc.docx'), caption= '''–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞üë®‚Äçüíª: ''', reply_markup=bb.backkk_btn)

@dp.callback_query(F.data == 'ctg2')
async def category_1(callback: CallbackQuery):
    await callback.message.answer('''–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é:''', reply_markup= bb.ctg2_btn)

@dp.callback_query(F.data == 'mech')
async def d_one(callback: CallbackQuery):
    await callback.message.reply_document(document=FSInputFile('/Users/evgeniya/Desktop/PYTHON/botGPS/TestDocs/mech.docx'), caption= '''–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –º–∞—à–∏–Ω–Ω–æ–≥–æ –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞üë®‚Äçüíª: ''', reply_markup=bb.backkk_btn)

@dp.callback_query(F.data == 'ai')
async def d_one(callback: CallbackQuery):
    await callback.message.reply_document(document=FSInputFile('/Users/evgeniya/Desktop/PYTHON/botGPS/TestDocs/ai.docx'), caption= '''–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ò–ò –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞üë®‚Äçüíª: ''', reply_markup=bb.backkk_btn)

# @dp.callback_query(F.data == 'ctg3')
# async def category_1(callback: CallbackQuery):
#     await callback.message.answer('''–ö–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏
# 89999999999 - –Ω–æ–º–µ—Ä –≥–æ—Ä—è—á–µ–π –ª–∏–Ω–∏–∏
# 89999999999 - –Ω–æ–º–µ—Ä –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
# @tgtgtgtgtg - —Ç–µ–ª–µ–≥—Ä–∞–º–º —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏
# @gtgtgtgtgt - —Ç–µ–ª–µ–≥—Ä–∞–º–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –±–æ—Ç–∞''',reply_markup=bb.backkk_btn)

# @dp.callback_query(F.data == 'Docs1')
# async def d_one(callback: CallbackQuery):
#     await callback.message.reply_document(document=FSInputFile('TestDocs/Docu1.docx'), caption= '''–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∫ –ø–µ—Ä–≤–∏—á–Ω—ã–º –∑–∞–¥–∞—á–∞–º –∫–æ–º–ø–∞–Ω–∏–∏üë®‚Äçüíª: ''', reply_markup=bb.backkk_btn)

# @dp.callback_query(F.data == 'Docs2')
# async def d_two(callback: CallbackQuery):
#     await callback.message.reply_document(document=FSInputFile('TestDocs/Docu2.docx'), caption= '''–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∫ –≤—Ç–æ—Ä–∏—á–Ω—ã–º –∑–∞–¥–∞—á–∞–º –∫–æ–º–ø–∞–Ω–∏–∏üë©‚Äçüíª: ''', reply_markup=bb.backkk_btn)

# @dp.callback_query(F.data == 'Docs3')
# async def d_three(callback: CallbackQuery):
#     await callback.message.reply_document(document=FSInputFile('TestDocs/Docu3.docx'), caption= '''–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∫ —Ç—Ä–µ—Ç–∏—á–Ω—ã–º –∑–∞–¥–∞—á–∞–º –∫–æ–º–ø–∞–Ω–∏–∏üë•: ''', reply_markup=bb.backkk_btn)

if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    try:
        asyncio.run(main())
    except KeyboardInterrupt or RuntimeError:
        print("Bot was disabled")